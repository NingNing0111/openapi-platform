version: '3.8'  # Docker Compose版本号，根据你的实际需求可能会有所不同

services:
  # Nacos注册中心
  nacos:
    image: nacos/nacos-server
    container_name: nacos
    env_file:
      - nacos-standlone-mysql.env
    volumes:
      - ./standalone-logs/:/home/nacos/logs
    ports:
      - "8848:8848"
      - "9848:9848"
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - openapi-platform-network
  # Redis环境
  redis:
    image: redis:latest  # 使用最新的Redis镜像
    container_name: redis-server  # 指定容器名称
    ports:
      - "6379:6379"  # 将Redis的6379端口映射到宿主机的6379端口
    networks:
      - openapi-platform-network # 使用定义的网络
  # MySQL环境
  mysql:
    image: mysql:latest  # 使用最新的MySQL镜像，确保版本在8以上
    container_name: mysql-server  # 指定容器名称
    ports:
      - "3306:3306" # 将MySQL的3306端口映射到宿主机的3306端口
    env_file:
      - mysql.env
    volumes:
#      - /usr/local/docker/mysql/data:/var/lib/mysql
      - ../sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - openapi-platform-network # 使用定义的网络

networks:
  openapi-platform-network:
    driver: bridge  # 使用默认的bridge网络驱动器
